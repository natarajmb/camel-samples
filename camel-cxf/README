In Apache Camel, the Camel CXF component is the key to integrating routes with Web services. You can use the Camel CXF
component to create a CXF endpoint, which can be used in either of the following ways:

Consumer — (at the start of a route) represents a Web service instance, which integrates with the route. The type of
            payload injected into the route depends on the value of the endpoint's dataFormat option.

Producer — (at other points in the route) represents a WS client proxy, which converts the current exchange object into
            an operation invocation on a remote Web service. The format of the current exchange must match the
            endpoint's dataFormat setting.

There are two examples in this module each for Consumer and Producer. Consumer example resides in consumer package and
producer in producer package.

You can run and test the example in Consumer package as follows:

Step1:
Start the consumer end point using
mvn clean compile exec:exec -Dexec.executable="java" -Dexec.args="-classpath %classpath -Xdebug
                -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 com.cognitivenode.consumer.RunService"

Step2:
Use SoapUI to do the tests for the API (http://www.soapui.org/)
Note: Look at spring-consumer-context.xml to get the port


You can run and test the example in Producer package as follows:
Step1:
Same as Step1 in Consumer example

Step2:
mvn clean compile exec:java -Dexec.mainClass=com.cognitivenode.producer.ConsumeService
Note: Running above command would connect to the service started by Step1 of Consumer example and will print out
all the customers from that example.

