<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">


    <!-- We are defining a Service below which external clients can access. But this is know
         as "CONSUMER" in camel.
    -->
    <cxf:cxfEndpoint id="customerServiceEndpoint" address="http://0.0.0.0:12912/Customer"
                     serviceClass="com.cognitivenode.customer.ICustomerService"
                     endpointName="s:CustomerServicePort"
                     serviceName="s:CustomerService"
                     xmlns:s="http://www.cognitivenode.com/customer"/>

    <bean id="customerServiceImpl" class="com.cognitivenode.CXFCustomerServiceImpl"/>

    <!-- When spring process the below piece of code it automatically starts up all the routes
         defined with in the context. There is a alternative way of doing this by defining
         the camel bean and invoking it and starting it manually. Read the starter guide to
         grips - http://camel.apache.org/getting-started.html
    -->
    <camel:camelContext id="camel">
        <camel:route>
            <camel:from uri="cxf:bean:customerServiceEndpoint"/>
            <camel:to uri="bean:customerServiceImpl"/>
        </camel:route>
    </camel:camelContext>

</beans>